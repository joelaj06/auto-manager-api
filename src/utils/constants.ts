export const INTERFACE_TYPE = {
  AuthMiddleware: Symbol.for("AuthMiddleware"),
  CompanyRepositoryImpl: Symbol.for("CompanyRepositoryImpl"),
  CompanyInteractorImpl: Symbol.for("CompanyInteractorImpl"),
  CompanyController: Symbol.for("CompanyController"),
  UserController: Symbol.for("UserController"),
  UserInteractor: Symbol.for("UserInteractor"),
  AuthRepositoryImpl: Symbol.for("AuthRepositoryImpl"),
  AuthServiceImpl: Symbol.for("AuthServiceImpl"),
  AuthInteractorImpl: Symbol.for("AuthInteractorImpl"),
  AuthController: Symbol.for("AuthController"),
  Mailer: Symbol.for("Mailer"),
  UserRepositoryImpl: Symbol.for("UserRepositoryImpl"),
  MailerImpl: Symbol.for("MailerImpl"),
  Logger: Symbol.for("Logger"),
  ErrorHandler: Symbol.for("ErrorHandler"),
  ErrorMiddleWare: Symbol.for("ErrorMiddleWare"),
  VehicleRepositoryImpl: Symbol.for("VehicleRepositoryImpl"),
  VehicleInteractorImpl: Symbol.for("VehicleInteractorImpl"),
  VehicleController: Symbol.for("VehicleController"),
  DriverRepositoryImpl: Symbol.for("DriverRepositoryImpl"),
  DriverInteractorImpl: Symbol.for("DriverInteractorImpl"),
  DriverController: Symbol.for("DriverController"),
  SalesRepositoryImpl: Symbol.for("SalesRepositoryImpl"),
  SalesInteractorImpl: Symbol.for("SalesInteractorImpl"),
  SalesController: Symbol.for("SalesController"),
  ExpenseCategoryRepositoryImpl: Symbol.for("ExpenseCategoryRepositoryImpl"),
  ExpenseCategoryInteractorImpl: Symbol.for("ExpenseCategoryInteractorImpl"),
  ExpenseCategoryController: Symbol.for("ExpenseCategoryController"),
  ExpenseRepositoryImpl: Symbol.for("ExpenseRepositoryImpl"),
  ExpenseInteractorImpl: Symbol.for("ExpenseInteractorImpl"),
  ExpenseController: Symbol.for("ExpenseController"),
  RentalRepositoryImpl: Symbol.for("RentalRepositoryImpl"),
  RentalInteractorImpl: Symbol.for("RentalInteractorImpl"),
  RentalController: Symbol.for("RentalController"),
  CustomerRepositoryImpl: Symbol.for("CustomerRepositoryImpl"),
  CustomerInteractorImpl: Symbol.for("CustomerInteractorImpl"),
  CustomerController: Symbol.for("CustomerController"),
  StorageBucketImpl: Symbol.for("StorageBucketImpl"),
  DashboardInteractorImpl: Symbol.for("DashboardInteractorImpl"),
  DashboardController: Symbol.for("DashboardController"),
  DashboardRepositoryImpl: Symbol.for("DashboardRepositoryImpl"),
  RoleRepositoryImpl: Symbol.for("RoleRepositoryImpl"),
  RoleInteractorImpl: Symbol.for("RoleInteractorImpl"),
  RoleController: Symbol.for("RoleController"),
  PermissionRepositoryImpl: Symbol.for("PermissionRepositoryImpl"),
  PermissionInteractorImpl: Symbol.for("PermissionInteractorImpl"),
  PermissionController: Symbol.for("PermissionController"),
};

export enum HttpStatusCode {
  OK = 200,
  CREATED = 201,
  NO_CONTENT = 204,
  BAD_GATEWAY = 502,
  UNAUTHORIZED = 401,
  FORBIDDEN = 403,
  NOT_ACCEPTABLE = 406,
  BAD_REQUEST = 400,
  NOT_FOUND = 404,
  INTERNAL_SERVER_ERROR = 500,
  UNPROCESSABLE_ENTITY = 422,
  CONFLICT = 409,
}

const Permissions = Object.freeze({
  CREATE_ROLE: "create:role",
  VIEW_ROLE: "view:role",
  UPDATE_ROLE: "update:role",
  DELETE_ROLE: "delete:role",
  VIEW_ROLES: "view:roles",
  CREATE_PERMISSION: "create:permission",
  VIEW_PERMISSION: "view:permission",
  VIEW_PERMISSIONS: "view:permissions",
  UPDATE_PERMISSION: "update:permission",
  DELETE_PERMISSION: "delete:permission",
  CREATE_USER: "create:user",
  VIEW_USER: "view:user",
  UPDATE_USER: "update:user",
  DELETE_USER: "delete:user",
  VIEW_USERS: "view:users",
  CREATE_COMPANY: "create:company",
  VIEW_COMPANY: "view:company",
  UPDATE_COMPANY: "update:company",
  DELETE_COMPANY: "delete:company",
  VIEW_COMPANIES: "view:companies",
  CREATE_VEHICLE: "create:vehicle",
  VIEW_VEHICLE: "view:vehi-cle",
  UPDATE_VEHICLE: "update:vehicle",
  DELETE_VEHICLE: "delete:vehicle",
  VIEW_VEHICLES: "view:vehicles",
  CREATE_DRIVER: "create:driver",
  VIEW_DRIVER: "view:driver",
  UPDATE_DRIVER: "update:driver",
  DELETE_DRIVER: "delete:driver",
  VIEW_DRIVERS: "view:drivers",
  CREATE_SALE: "create:sales",
  VIEW_SALE: "view:sale",
  UPDATE_SALE: "update:sale",
  DELETE_SALE: "delete:sale",
  VIEW_SALES: "view:sales",
  VIEW_OTHERS_SALES: "view:others-sales",
  VIEW_SALES_FILTER_BY_DRIVER: "view:sales-filter-by-driver",
  VIEW_SALES_FILTER_BY_VEHICLE: "view:sales-filter-by-vehicle",
  CREATE_EXPENSE_CATEGORY: "create:expense-category",
  VIEW_EXPENSE_CATEGORY: "view:expense-category",
  UPDATE_EXPENSE_CATEGORY: "update:expense-category",
  DELETE_EXPENSE_CATEGORY: "delete:expense-category",
  VIEW_EXPENSE_CATEGORIES: "view:expense-categories",
  CREATE_EXPENSE: "create:expense",
  VIEW_EXPENSE: "view:expense",
  UPDATE_EXPENSE: "update:expense",
  DELETE_EXPENSE: "delete:expense",
  VIEW_EXPENSES: "view:expenses",
  VIEW_OTHERS_EXPENSES: "view:others-expenses",
  VIEW_EXPENSES_FILTER_BY_CATEGORY: "view:expenses-filter-by-category",
  VIEW_EXPENSES_FILTER_BY_DRIVER: "view:expenses-filter-by-driver",
  VIEW_EXPENSES_FILTER_BY_VEHICLE: "view:expenses-filter-by-vehicle",
  CREATE_RENTAL: "create:rental",
  VIEW_RENTAL: "view:rental",
  UPDATE_RENTAL: "update:rental",
  DELETE_RENTAL: "delete:rental",
  VIEW_RENTALS: "view:rentals",
  CREATE_RENTAL_EXTENSION: "create:rental-extension",
  VIEW_RENTAL_EXTENSION: "view:rental-extension",
  UPDATE_RENTAL_EXTENSION: "update:rental-extension",
  DELETE_RENTAL_EXTENSION: "delete:rental-extension",
  VIEW_RENTAL_EXTENSIONS: "view:rental-extensions",
  CREATE_CUSTOMER: "create:customer",
  VIEW_CUSTOMER: "view:customer",
  UPDATE_CUSTOMER: "update:customer",
  DELETE_CUSTOMER: "delete:customer",
  VIEW_CUSTOMERS: "view:customers",
  VIEW_DASHBOARD: "view:dashboard",
  VIEW_DASHBOARD_SALES: "view:dashboard-sales",
  VIEW_DASHBOARD_CUSTOMERS: "view:dashboard-customers",
  VIEW_DASHBOARD_DRIVERS: "view:dashboard-drivers",
  VIEW_DASHBOARD_VEHICLES: "view:dashboard-vehicles",
  VIEW_DASHBOARD_EXPENSES: "view:dashboard-expenses",
  VIEW_DASHBOARD_RENTALS: "view:dashboard-rentals",
  VIEW_DASHBOARD_REVENUE: "view:dashboard-revenue",
  VIEW_DASHBOARD_WEEKLY_SALES: "view:dashboard-weekly-sales",
  VIEW_DASHBOARD_SUMMARY: "view:dashboard-summary",
} as const);

const UserPermissions = Object.values(Permissions);

export type PermissionType = typeof Permissions;

export { Permissions, UserPermissions };
